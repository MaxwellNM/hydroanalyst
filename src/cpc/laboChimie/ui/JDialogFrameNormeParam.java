/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogFrameNormeParam.java
 *
 * Created on 7 sept. 2011, 14:06:54
 */
package cpc.laboChimie.ui;

import cpc.laboChimie.jpa.Norme;
import cpc.laboChimie.metier.IMetier;
import cpc.laboChimie.metierConfig.ParametreGestion;
import cpc.laboChimie.model.TableModelNorme;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import org.jdesktop.application.Action;
import org.jdesktop.swingx.JXTable;

/**
 *
 * @author MAXEWLL
 */
public class JDialogFrameNormeParam extends javax.swing.JDialog {
    TableModelNorme  TablemodelNoreme = null;
    Vector<Norme> normes = new Vector<Norme>(); 
    static   JDialogChoixTypeEau JChoix;
       //   JFrameParametres jfNorme;
          JDialogNormePa jdCreeNorm;
    private IMetier metier;
    private List<Norme> ls;
    long idTypEau;
    private JFrameParametrefinal JParam;
    int op ; //code de l'op√©ration 
   // private JFrameParametrefinal jparamf;
    
    /** Creates new form JDialogFrameNormeParam */
    public JDialogFrameNormeParam(java.awt.Frame parent, boolean modal,JDialogChoixTypeEau j) {
        super(parent, modal);
        this.JChoix = j;
         this.setTitle("LISTE DES NORMES DU TYPE "+this.JChoix.getNomTypeEau().toUpperCase());
       
        idTypEau = this.JChoix.getIdEau();
       // TablemodelNoreme = new TableModelNormeParametre(normes);
        initSpring();
        initComponents();
        masterTablenorme.getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTextField1.setText(this.JChoix.getNomTypeEau());
        
        
    }
    
    TableModelNorme getTablemodelNorme()
    {
      return TablemodelNoreme;
    }
        
    public JFrameParametrefinal getjDialogListParam() {
        return JParam;
    }

    public void setjDialogListParam(JFrameParametrefinal jD ){
        this.JParam = jD;
    }

    
     String  getNomTypEau()
     {
       return metier.getTypeEau(idTypEau).getCategorie();
     }    
               
               
    public long getidTypeEau()
    {
      return idTypEau;
    }
     
         public int getCodeOperation()
      {
         return op;       
             }
     
     public void setCodeOperation(int op)
     {
       this.op = op;
     }
     
    ////Initialisation du masque de saisie
    ParametreGestion parametreGestion;

    private void initSpring() {
        TablemodelNoreme = new TableModelNorme(normes);
        parametreGestion = ParametreGestion.getInstance();
        metier = parametreGestion.getMetier();
        //list_typeEau =  metier.getAllTypeEau();
        ls= metier.getParametreEau(this.JChoix.getIdEau());
        if(ls!=null)
        {
            for(Norme n: ls)
            {
              System.out.println("nom n = "+n.getNormeNomParam());
            }
            
            TablemodelNoreme.addRows(ls); 
    }
        else
      System.out.println("La liste est vide");
              
    }
public Norme getNormeTomasterTable()
{if (masterTablenorme.getSelectedRow() != -1) {
            long i = 0;
            int ligne = masterTablenorme.getSelectedRow();
            i = (Long) masterTablenorme.getValueAt(ligne, 0);
            return metier.getNormeById(i);
        } else {
            return null;
        }

}
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTablenorme = new org.jdesktop.swingx.JXTable();
        jLabel2 = new javax.swing.JLabel();
        jLabelAjouter = new javax.swing.JLabel();
        jToggleButtonAjouter = new javax.swing.JToggleButton();
        jToggleButtonModifier = new javax.swing.JToggleButton();
        jLabelModifier = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cpc.laboChimie.mainApp.class).getContext().getResourceMap(JDialogFrameNormeParam.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setEnabled(false);
        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        masterTablenorme.setModel(TablemodelNoreme);
        masterTablenorme.setName("masterTablenorme"); // NOI18N
        jScrollPane1.setViewportView(masterTablenorme);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabelAjouter.setText(resourceMap.getString("jLabelAjouter.text")); // NOI18N
        jLabelAjouter.setName("jLabelAjouter"); // NOI18N

        jToggleButtonAjouter.setText(resourceMap.getString("jToggleButtonAjouter.text")); // NOI18N
        jToggleButtonAjouter.setName("jToggleButtonAjouter"); // NOI18N
        jToggleButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonAjouterActionPerformed(evt);
            }
        });

        jToggleButtonModifier.setText(resourceMap.getString("jToggleButtonModifier.text")); // NOI18N
        jToggleButtonModifier.setName("jToggleButtonModifier"); // NOI18N
        jToggleButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonModifierActionPerformed(evt);
            }
        });

        jLabelModifier.setText(resourceMap.getString("jLabelModifier.text")); // NOI18N
        jLabelModifier.setName("jLabelModifier"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(cpc.laboChimie.mainApp.class).getContext().getActionMap(JDialogFrameNormeParam.class, this);
        jToggleButton1.setAction(actionMap.get("RafraichirListe")); // NOI18N
        jToggleButton1.setText(resourceMap.getString("jToggleButton1.text")); // NOI18N
        jToggleButton1.setName("jToggleButton1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(58, 58, 58)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(448, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButtonAjouter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jLabelModifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jToggleButtonModifier)
                        .addGap(165, 165, 165))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jToggleButton1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonAjouter)
                    .addComponent(jToggleButtonModifier)
                    .addComponent(jLabelModifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jToggleButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonAjouterActionPerformed
        // TODO add your handling code here:
        //renvoiver JframeParametre
        
        //Le code pour ajouter une norme : 4
        JParam = new JFrameParametrefinal(null,true,null,null,this,null,null);
        //if(this.jadmin.getOpNorme()==-1){
        //JParam.getjToggleButtonEnregistrer().setEnabled(true);
        JParam.getjToggleButtonModifier().setEnabled(false);
        JParam.getJtextFieldTypeEau().setText(this.JChoix.getNomTypeEau());
        JParam.setItypdEau(idTypEau);
        JParam.setCodeOperation(1);
        //JParam.setNomTypeEau(null);
        JParam.setTableModelNorme(TablemodelNoreme);
        JParam.getjToggleButtonListerNormes().setVisible(false);
        JParam.getJLabelListerNorme().setVisible(false);
        JParam.setVisible(true);
       // this.setVisible(false);
        
        
    }//GEN-LAST:event_jToggleButtonAjouterActionPerformed

    private void jToggleButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonModifierActionPerformed
        // TODO add your handling code here:
        //  Modification de la norme s√©lectionn√©e dans JDialogFrameNormeParam
        Norme n = getNormeTomasterTable();
        if(n==null)
        {
          JOptionPane.showMessageDialog(null, "VEUILLEZ SELECTIONNER UNE NORME");
          return;
        }
            
        jdCreeNorm = new JDialogNormePa(null,true,null,this);
        //if(this.jadmin.getOpNorme()==-1){
        jdCreeNorm.getJcomboboxClassParam().setEnabled(false);
        jdCreeNorm.getJToogleButtonAjouter().setVisible(false);//Parametre
        jdCreeNorm.getJtoogleButtonModifier().setVisible(false);//Parametre
        jdCreeNorm.getJtoogleButtonModifierFromNorme().setVisible(true);
        jdCreeNorm.getJtoogleButtonAjouterFromNorme().setEnabled(false);
        jdCreeNorm.getJTextField().setText(jTextField1.getText());
        jdCreeNorm.setNormeTointerface(n);
        /* d√©sactiver le nom la classe, le type de r√©sultat
        *  Car ceux-ci sont sp√©cifiques √† un param√®tre modifier norme != modifier parametre
         */
        jdCreeNorm.getJtextfieldNomParam().setEnabled(false);
        jdCreeNorm.getjTextfieldClasseParam().setEnabled(false);
        jdCreeNorm.getjComboboxClasse().setVisible(false);
        jdCreeNorm.getjComboboxType().setEnabled(false);
        jdCreeNorm.setVisible(true);
        //this.setVisible(false);
    }//GEN-LAST:event_jToggleButtonModifierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDialogFrameNormeParam dialog = new JDialogFrameNormeParam(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelAjouter;
    private javax.swing.JLabel jLabelModifier;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButtonAjouter;
    private javax.swing.JToggleButton jToggleButtonModifier;
    private org.jdesktop.swingx.JXTable masterTablenorme;
    // End of variables declaration//GEN-END:variables

    JToggleButton getjToggleButtonEnregistrer() {
       // throw new UnsupportedOperationException("Not yet implemented");
        return jToggleButtonAjouter;
        
    }

    JToggleButton getjToggleButtonModifier() {
        //throw new UnsupportedOperationException("Not yet implemented");
        return jToggleButtonModifier;
    }

    JTextField getJtextFieldTypeEau() {
        //throw new UnsupportedOperationException("Not yet implemented");
  
        return jTextField1;
    }

    void setJDialogNormeParametre(JDialogNormePa object) {
      //  throw new UnsupportedOperationException("Not yet implemented");
        this.jdCreeNorm = object;
    }

    JLabel getjlabelAjouter() {
       // throw new UnsupportedOperationException("Not yet implemented");
        
        return jLabelAjouter;
    }
    
    JLabel getjlabelModifier() {
       // throw new UnsupportedOperationException("Not yet implemented");
        
        return jLabelModifier;
    }

    @Action
    public void RafraichirListe() {
        
         this.TablemodelNoreme.removeAll();
         this.TablemodelNoreme.addRows(metier.getParametreEau(idTypEau));
    }
    
}
